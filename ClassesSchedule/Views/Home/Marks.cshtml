@model ClassesSchedule.ViewModel.MarksVM
@{
    ViewBag.Title = "Marks";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div style="margin-top:5%; margin-bottom:10%;" class="container">
    <h2 style="text-align:center; margin-bottom:2%;">List of Marks</h2>
    @if (Session["ROLE"].ToString() == "3" || Session["ROLE"].ToString() == "1")
    {
        <div class="row bg-info" style="margin-bottom:15px; padding:10px; padding-top:5px; background-color:#F9F9F9; border-bottom:solid 2px #dddddd;">
            <button type="button" style="float:right; margin-top:5px;" class="btn btn-primary" data-toggle="modal" data-target="#myModal">Add New Mark</button>
        </div>
    }
    <div id="data">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>No.</th>
                    <th>Course</th>
                    <th>Student</th>
                    <th>Mark</th>
                    <th>Date</th>
                    <th>Teacher</th>
                    <th>Degree</th>
                </tr>
            </thead>
            <tbody>
                @if (Session["ROLE"].ToString() == "3" || Session["ROLE"].ToString() == "4")
                {
                   int i = 1;
                        foreach (var item in Model.MarksByUser)
                        {
                            <tr>
                                <td>@(i++)</td>
                                <td>@item.Course </td>
                                <td>@item.Student</td>
                                <td>@item.Value</td>
                                <td>@item.Date.Value.ToShortDateString()</td>
                                <td>@item.Teacher</td>
                                <td>@item.Degree</td>
                            </tr>
                            }
                        }
                        else
                        {
                            int j = 1;
                            foreach (var item in Model.MarksList)
                            {
                                <tr>
                                    <td>@(j++)</td>
                                    <td>@item.Course </td>
                                    <td>@item.Student</td>
                                    <td>@item.Value</td>
                                    <td>@item.Date.Value.ToShortDateString()</td>
                                    <td>@item.Teacher</td>
                                    <td>@item.Degree</td>
                                    @if (Session["ROLE"].ToString() == "2" || Session["ROLE"].ToString() == "1")
                                    {
                                        <td><button class="btn btn-sm btn-danger" onclick="location.href='@Url.Action("DelMark", "Home", new { ID = item.ID })'">Delete</button></td>
                                    }
                                </tr>
                            }
                        }
            </tbody>
        </table>
    </div>
</div>


<!-- Modal -->
@using (Html.BeginForm("PostNewMark", "Home", FormMethod.Post, new { @class = "form form-horizontal form-limt", id = "AddNewMark" }))
            {

    @Html.HiddenFor(m => Model.Teacher)

    @Html.ValidationSummary(false, "", new { @class = "text-danger" })
    <div id="myModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Add New Mark</h4>
                </div>
                <div class="modal-body">

                    @*TEST*@
                    <form class="form-horizontal">
                        <div class="form-group form-group-sm">
                            <label class="col-sm-4 control-label" for="formGroupInputSmall">Course</label>
                            <div class="col-sm-8">
                                @Html.DropDownListFor(m => Model.Course, new SelectList(Model.Course), "Course", htmlAttributes: new { @class = "form-control input-sm", @required = "true", @autofocus = "true" })
                            </div>
                        </div>
                        <div class="form-group form-group-sm">
                            <label class="col-sm-4 control-label" for="formGroupInputSmall">Student ID</label>
                            <div class="col-sm-8">
                                @Html.EditorFor(model => Model.StudentID, new { htmlAttributes = new { @class = "form-control", @placeholder = "ID", @required = "true", @autofocus = "true" } })
                            </div>
                        </div>
                        <div class="form-group form-group-sm">
                            <label class="col-sm-4 control-label" for="formGroupInputSmall">Mark</label>
                            <div class="col-sm-8">
                                @Html.EditorFor(model => Model.Mark, new { htmlAttributes = new { @class = "form-control", @placeholder = "Mark", @required = "true", @autofocus = "true", @min = "1", @max = "5" } })
                            </div>
                        </div>
                        <div class="form-group form-group-sm">
                            <label class="col-sm-4 control-label" for="formGroupInputLarge">When</label>
                            <div class="col-sm-8">
                                @Html.DropDownListFor(m => Model.Date, new SelectList(Model.Date), "When", htmlAttributes: new { @class = "form-control input-sm", @required = "true", @autofocus = "true" })
                            </div>
                        </div>
                        <div class="form-group form-group-sm">
                            <label class="col-sm-4 control-label" for="formGroupInputLarge">Teacher</label>
                            <div class="col-sm-8">
                                @Html.EditorFor(model => Model.Teacher, new { htmlAttributes = new { @class = "form-control", @placeholder = "Teacher", @required = "true", @autofocus = "true", @disabled = "disabled" } })
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Add</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
}

<script>

    $(document).ready(function () {
        $('#data').after('<div class="btn-group" role="group" style="float:right" id="nav"></div>');
        var rowsShown = 15;
        var rowsTotal = $('#data tbody tr').length;
        var numPages = rowsTotal / rowsShown;
        for (i = 0; i < numPages; i++) {
            var pageNum = i + 1;
            $('#nav').append('<a type="button" class="btn btn-sm btn-default" href="#" rel="' + i + '">' + pageNum + '</a> ');
        }
        $('#data tbody tr').hide();
        $('#data tbody tr').slice(0, rowsShown).show();
        $('#nav a:first').addClass('active');
        $('#nav a').bind('click', function () {

            $('#nav a').removeClass('active');
            $(this).addClass('active');
            var currPage = $(this).attr('rel');
            var startItem = currPage * rowsShown;
            var endItem = startItem + rowsShown;
            $('#data tbody tr').css('opacity', '0.0').hide().slice(startItem, endItem).
                    css('display', 'table-row').animate({ opacity: 1 }, 300);
        });
    });

</script>