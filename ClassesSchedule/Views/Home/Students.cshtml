@model ClassesSchedule.ViewModel.StudentsVM
@{
    ViewBag.Title = "Students";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div style="margin-top:5%; margin-bottom:10%;" class="container">
    <h2 style="text-align:center; margin-bottom:2%;">List of Students</h2>


    @*TEST*@
    @if (Session != null && Session["ROLE"] != null || Session["FNAME"] != null || Session["ID"] != null && Session["ROLE"].ToString() == "3" || Session["ROLE"].ToString() == "4")
    {
        <div class="row bg-info" style="margin-bottom:15px; padding:10px; padding-top:5px; background-color:#F9F9F9; border-bottom:solid 2px #dddddd;">
            <button type="button" style="float:right; margin-top:5px;" class="btn btn-primary" data-toggle="modal" data-target="#myModal">Add New Student</button>
        </div>
    }
    else { }

    <div id="data">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>No.</th>
                    <th>Name</th>
                    <th>Surname</th>
                    <th>Phone</th>
                    <th>Email</th>
                    <th>Specialization</th>
                </tr>
            </thead>
            <tbody>
                @{int i = 1;}
                @foreach (var item in Model.StudentList)
                {
                    <tr>
                        <td>@i @{i++;}</td>
                        <td>@item.Name</td>
                        <td>@item.Surname</td>
                        <td>@item.Phone</td>
                        <td>@item.Email</td>
                        <td>@item.Specialization</td>
                        @if (item.Dismiss == false)
                        {
                            <td><button type="button" data-toggle="modal" data-target="#UpdateStudentModal" class="btn btn-xs btn-info" onclick="t(@item.Student_ID)">Update</button></td>
                                    <td><button class="btn btn-xs btn-danger" onclick="location.href='@Url.Action("DismissStudent", "Home", new { ID = item.Student_ID })'">Dismiss</button></td>
                        }
                        else
                        {
                            <td><button disabled class="btn btn-xs btn-default">Update</button></td>
                                    <td><button class="btn btn-xs btn-success" onclick="location.href='@Url.Action("InvolveStudent", "Home", new { ID = item.Student_ID })'">Involve</button></td>
                        }

                    </tr>
                            }
            </tbody>
        </table>
    </div>

    <!-- Modal Add New Student -->
    @using (Html.BeginForm("PostNewStudent", "Home", FormMethod.Post, new { @class = "form form-horizontal form-limt", id = "AddNewStudent" }))
    {
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        <div id="myModal" class="modal fade" role="dialog">
            <div class="modal-dialog">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Add New Student</h4>
                    </div>
                    <div class="modal-body">

                        @*TEST*@
                        <form class="form-horizontal">
                            <div class="form-group form-group-sm">
                                <label class="col-sm-4 control-label" for="formGroupInputSmall">Name</label>
                                <div class="col-sm-8">
                                    @Html.EditorFor(model => Model.FName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Name", @required = "true", @autofocus = "true" } })
                                </div>
                            </div>
                            <div class="form-group form-group-sm">
                                <label class="col-sm-4 control-label" for="formGroupInputSmall">Surname</label>
                                <div class="col-sm-8">
                                    @Html.EditorFor(model => Model.LName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Surname", @required = "true", @autofocus = "true" } })
                                </div>
                            </div>
                            <div class="form-group form-group-sm">
                                <label class="col-sm-4 control-label" for="formGroupInputSmall">Phone</label>
                                <div class="col-sm-8">
                                    @Html.EditorFor(model => Model.Phone, new { htmlAttributes = new { @class = "form-control", @placeholder = "Phone", @required = "true", @autofocus = "true" } })
                                </div>
                            </div>
                            <div class="form-group form-group-sm">
                                <label class="col-sm-4 control-label" for="formGroupInputLarge">Email</label>
                                <div class="col-sm-8">
                                    @Html.EditorFor(model => Model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email", @required = "true", @autofocus = "true", @type = "email", @pattern = "[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$" } })
                                </div>
                            </div>
                            <div class="form-group form-group-sm">
                                <label class="col-sm-4 control-label" for="formGroupInputLarge">Date Of Birth</label>
                                <div class="col-sm-8">
                                    @Html.EditorFor(model => Model.DofB, new { htmlAttributes = new { @class = "form-control", @placeholder = "Date Of Birth", @required = "true", @autofocus = "true", @type = "datetime" } })
                                </div>
                            </div>
                            <div class="form-group form-group-sm">
                                <label class="col-sm-4 control-label" for="formGroupInputSmall">Specialization</label>
                                <div class="col-sm-8">
                                    @Html.EditorFor(model => Model.Spec, new { htmlAttributes = new { @class = "form-control", @placeholder = "Specialization", @required = "true", @autofocus = "true" } })
                                </div>
                            </div>
                            <div class="form-group form-group-sm">
                                <label class="col-sm-4 control-label" for="formGroupInputLarge">Login</label>
                                <div class="col-sm-8">
                                    @Html.EditorFor(model => Model.Login, new { htmlAttributes = new { @class = "form-control", @placeholder = "Login", @required = "true", @autofocus = "true" } })
                                </div>
                            </div>
                            <div class="form-group form-group-sm">
                                <label class="col-sm-4 control-label" for="formGroupInputLarge">Password</label>
                                <div class="col-sm-8">
                                    @Html.EditorFor(model => Model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Password", @required = "true", @autofocus = "true", @type = "password", @minlength = "4" } })
                                </div>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Add</button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    }


    <!-- Modal Update Student -->
    @using (Html.BeginForm("UpdateStudent", "Home", FormMethod.Post, new { @class = "form form-horizontal form-limt", id = "UpStudent" }))
    {
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        <div id="UpdateStudentModal" class="modal fade" role="dialog">
            <div class="modal-dialog">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Update Student</h4>
                    </div>
                    <div class="modal-body">

                        @*TEST*@
                        <form class="form-horizontal">
                            <div class="form-group form-group-sm">
                                <label class="col-sm-4 control-label" for="formGroupInputSmall">Name</label>
                                <div class="col-sm-8">
                                    @*HelpID*@
                                    @Html.TextBoxFor(model => Model.HelpID, new { @class = "form-control", @id = "HelpID", @type = "hidden" })
                                    @*END*@
                                    @Html.EditorFor(model => Model.FName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Name", @required = "true", @autofocus = "true" } })
                                </div>
                            </div>
                            <div class="form-group form-group-sm">
                                <label class="col-sm-4 control-label" for="formGroupInputSmall">Surname</label>
                                <div class="col-sm-8">
                                    @Html.EditorFor(model => Model.LName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Surname", @required = "true", @autofocus = "true" } })
                                </div>
                            </div>
                            <div class="form-group form-group-sm">
                                <label class="col-sm-4 control-label" for="formGroupInputSmall">Phone</label>
                                <div class="col-sm-8">
                                    @Html.EditorFor(model => Model.Phone, new { htmlAttributes = new { @class = "form-control", @placeholder = "Phone", @required = "true", @autofocus = "true" } })
                                </div>
                            </div>
                            <div class="form-group form-group-sm">
                                <label class="col-sm-4 control-label" for="formGroupInputLarge">Email</label>
                                <div class="col-sm-8">
                                    @Html.EditorFor(model => Model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email", @required = "true", @autofocus = "true", @type = "email", @pattern = "[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$" } })
                                </div>
                            </div>
                            <div class="form-group form-group-sm">
                                <label class="col-sm-4 control-label" for="formGroupInputLarge">Date Of Birth</label>
                                <div class="col-sm-8">
                                    @Html.EditorFor(model => Model.DofB, new { htmlAttributes = new { @class = "form-control", @placeholder = "Date Of Birth", @required = "true", @autofocus = "true", @type = "datetime" } })
                                </div>
                            </div>
                            <div class="form-group form-group-sm">
                                <label class="col-sm-4 control-label" for="formGroupInputSmall">Specialization</label>
                                <div class="col-sm-8">
                                    @Html.EditorFor(model => Model.Spec, new { htmlAttributes = new { @class = "form-control", @placeholder = "Specialization", @required = "true", @autofocus = "true" } })
                                </div>
                            </div>
                            <div class="form-group form-group-sm">
                                <label class="col-sm-4 control-label" for="formGroupInputLarge">Login</label>
                                <div class="col-sm-8">
                                    @Html.EditorFor(model => Model.Login, new { htmlAttributes = new { @class = "form-control", @placeholder = "Login", @required = "true", @autofocus = "true" } })
                                </div>
                            </div>
                            <div class="form-group form-group-sm">
                                <label class="col-sm-4 control-label" for="formGroupInputLarge">Password</label>
                                <div class="col-sm-8">
                                    @Html.EditorFor(model => Model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Password", @required = "true", @autofocus = "true", @type = "password", @minlength = "4" } })
                                </div>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Update</button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    }

</div>

<script type="text/javascript">
    var v;

    function post() {
        $.post("Home/UpdateStudent", { HelpID: v, FName: $("#FName").val(), LName: $("#LName").val(), Phone: $("#Phone").val(), Email: $("#Email").val(), DofB: $("#DofB").val(), Spec: $("#Spec").val(), Login: $("#Login").val(), Password: $("#Password").val() }, function (data) {
            console.log(data);
        });

    }
    function t(e) {
        v = e;
        $("#HelpID").val(v);
    };

    $('input[type="datetime"]').datetimepicker({
        timepicker: true,
        step: 1,
        closeOnDateSelect: true,
        formatDate: 'd.m.Y',
        formatTime: 'H:i',
        //format: 'd.m.Y H:i',
        //minDate:'-1970/01/02',//yesterday is minimum date(for today use 0 or -1970/01/01)
        //maxDate:'+1970/01/02',//tomorrow is maximum date calendar
        lang: 'en',
        //scrollInput: false
    });

    $(document).ready(function(){
        $('#data').after('<div class="btn-group" role="group" style="float:right" id="nav"></div>');
        var rowsShown = 10;
        var rowsTotal = $('#data tbody tr').length;
        var numPages = rowsTotal/rowsShown;
        for(i = 0;i < numPages;i++) {
            var pageNum = i + 1;
            $('#nav').append('<a type="button" class="btn btn-sm btn-default" href="#" rel="'+i+'">'+pageNum+'</a> ');
        }
        $('#data tbody tr').hide();
        $('#data tbody tr').slice(0, rowsShown).show();
        $('#nav a:first').addClass('active');
        $('#nav a').bind('click', function(){

            $('#nav a').removeClass('active');
            $(this).addClass('active');
            var currPage = $(this).attr('rel');
            var startItem = currPage * rowsShown;
            var endItem = startItem + rowsShown;
            $('#data tbody tr').css('opacity','0.0').hide().slice(startItem, endItem).
                    css('display','table-row').animate({opacity:1}, 300);
        });
    });

</script>